#!groovy
/*
=========================================
Author: Devops
Date: 11-12-2020
Purpose: To build Frontend java project

=========================================
*/

pipeline {

	agent {

		label 'master'
	}
	tools {

		 maven 'mymaven'   //is my maven name used in this project it is available in Global Tool Configuration
		 jdk 'java11'     //is my JDK name used in this project it is available in Global Tool Configuration
	}

	stages{
	
		stage ('Code Checkout') {
			steps{
			git branch: '7.7', credentialsId: 'devops_git', url: 'https://github.com/Alsamad-GH/addressbook.git'
			//git branch: 'main', credentialsId: 'devops_git', url: 'https://github.com/Alsamad-GH/spring-petclinic.git'
			}
		}
		stage('Validate project') {
			steps {

				script{    /*If windows it will be bat instead of sh */
					sh '''   
						mvn validate
					   '''
					   
					echo "this is Validate Project Completed"
				}
			}
		}
		stage('Compile project') {
			steps {

				script{   /*If windows it will be bat instead of sh */
					sh '''
						mvn compile
					   '''
					echo "this is Compile project Completed"  
				}
			}
		}
		stage('Test Project') {
			steps {

					script{   /*If windows it will be bat instead of sh */
						sh '''
							mvn test
						   '''
						echo "this is Test project Completed"  
					}
				}
		}
		stage('Package Project') {
			steps {

					script{   /*If windows it will be bat instead of sh */
						sh '''
							mvn package
						   '''
						echo "this is Package project Completed"  
					}
				}
		}
		stage('Status Project') {
			steps {

					script{   /*If windows it will be bat instead of sh */
						
						echo "this is Build Completed"  
					}
				}
		}
		stage('create Zip'){
			steps{
				script{
					sh """
						cd "${env.WORKSPACE}/target/"
						zip FrontEnd.zip addressbook-2.0.war
					  """
				}
			}
		}
		
		stage ('Publish to Nexus'){

			steps{

				script {
					artifactId = "development"
					artifactdir = "${env.WORKSPACE}/target/"
					artifactfile = "FrontEnd"
					groupid = "${env.BRANCH_NAME}"
					sh """
					git_version=`git rev-parse --short HEAD`
					"""
					
				nexusArtifactUploader(
						nexusVersion: 'nexus3',
						protocol: 'http',
						version: 'Demo',
						groupId: "${groupid}",
						credentialsId: 'nexus_ID',
						repository: 'Devops_Repo',
						nexusUrl: '34.68.143.245:8081/',
						artifacts: 
						[
							[artifactId: artifactId, file: artifactdir + artifactfile + '.zip', type: 'zip']
							
							]

				); 
			}
}
}
	}
	post{
		always{
			dir("${env.WORKSPACE}@tmp"){
				deleteDir()
				}
		}
	}
}
